name: CD

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Mono Build
      run: |
        chmod +x build.sh && ./build.sh
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: program
        path: main.exe
        retention-days: 1

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Markdown Check
      run: |
        sudo chown -R $(whoami) /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share
        npm install -g markdownlint-cli
        markdownlint *.md
    - name: Shell Check
      if: always()
      run: |
        sudo apt-get install shellcheck
        shellcheck *.sh
      
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: program
    - name: CSharp Check
      if: always()
      run: |
        sudo apt update
        sudo apt-get install gendarme
        gendarme -- *.exe
  
  publish:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v2

    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: program
    - name: Convert Flowchart
      run: |
        sudo mkdir /run/user/1001
        sudo chmod 777 /run/user/1001
        sudo apt install snapd
        sudo snap install drawio
        drawio -x -o flowchart.pdf flowchart.drawio 
    - name: Archive
      run: |
        tar -cf release.tar main.exe flowchart.pdf

    - name: Environment Variable Setup
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Publish to GitHub
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.RELEASE_VERSION }}"
        prerelease: false
        title: "${{ env.RELEASE_VERSION }} Build"
        files: release.tar
